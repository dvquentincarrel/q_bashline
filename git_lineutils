#!/bin/bash
# Gives info about files status in the current directory according to git

source bashline_colors
source drain_socket

coproc CO_NC_GIT { nc -U /tmp/.QBL_$PPID; }

# Loops over socket
while read -r path; do
    Q_GBRANCH= # Branch of current repo
    Q_GINFO= # Infos on current repo status
    Q_REMOTE= # Infos on history diff with remote

    # Get last queue item. Necessary because items could pile up if added during processing
    latest_path=$(drain_socket ${CO_NC_GIT[0]} "$path")
    cd "$latest_path"

    # Get current branch name or commit sha if detached
    head_info=$(git branch --show-current)
    if [[ -z "$head_info" ]]; then
        head_info=$(git rev-parse --short HEAD)
    fi
    printf -v Q_GBRANCH "▕ ${C_BRA_F}${head_info}${C_GEN_F}"

    # if there are local changes
    output=$(git status --porcelain | cut -c -2)
    if [[ -n "$output" ]]; then
        untracked=$(grep -c '^??' <<< "$output")
        unstaged=$(grep -c '^ .' <<< "$output")
        staged=$(grep -c '^. ' <<< "$output")
        printf -v Q_GINFO "▕ ${C_STA}${staged}+${C_UNS}${unstaged}!${C_UNT}${untracked}?${C_GEN_F}"
    fi

    # if history doesn't line up with remote
    head_line=$(git status --porcelain --branch | head -n 1 | grep "ahead\|behind" )
    if [[ -n "$head_line" ]]; then
        behind=$(grep -Po "behind \K\d+" <<< "$head_line")
        ahead=$(grep -Po "ahead \K\d+" <<< "$head_line")
        printf -v Q_REMOTE "▕ ${C_BHD}${behind:+$behind↓}${C_AHD}${ahead:+$ahead↑}"
    fi

    echo "${Q_GBRANCH}${Q_GINFO}${Q_REMOTE}" >&${CO_NC_GIT[1]}

done <&${CO_NC_GIT[0]}
